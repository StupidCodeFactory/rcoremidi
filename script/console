#!/usr/bin/env ruby
require 'irb'
# require 'irb/rubinius'

require "bundler/setup"
require 'byebug'
require 'ap'
Bundler.setup :default

require 'rcoremidi'





# device = RCoreMidi::Device.all.last
# puts device.name

# puts "#{Process.pid} press any key to stat"
# gets
# destination = device.entities.first.endpoints.detect { |e| e.is_a? Destination }

source      = RCoreMidi::Device.all.last.entities.first.endpoints.detect { |e| e.is_a? RCoreMidi::Source }


# loop do
#     client.send(destination, [0x90, 0x34, 0x65])
#     sleep 1
#     client.send(destination, [0x80, 0x34, 0x00])
#     sleep 1
# end

# RCoreMidi::ConnectionManager.devices[1]

client = RCoreMidi::Client.new("Bob")
client.connect_to source

client.live do
  # byebug
  instrument :drum, 1 do
    add 'C3', [ 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]
    add 'D3', [ 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 ]
  end
  pp self
end

client.start
# c_index = Musicalism::Note::NOTES.index { |n| n.include? "C" }
# notes = Musicalism::Note::NOTES[c_index..-1]
# notes += Musicalism::Note::NOTES[0..(c_index-1)]
# puts client.inspect
# client.start
# IRB.start(__FILE__)
